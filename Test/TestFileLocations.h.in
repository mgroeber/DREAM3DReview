#pragma once

// clang-format off
#include <QtCore/QString>

#define REMOVE_TEST_FILES 1

/* %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
 *
 * THIS FILE IS AUTO GENERATED AT CMAKE TIME. DO NOT EDIT THIS FILE. EDIT THE ORIGINAL TEMPLATE FILE
 * LOCATED AT @PLUGIN_NAME@/Test/TestFileLocations.h.in
 *
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  */


namespace UnitTest
{
  const QString DataDir("@DREAM3D_DATA_DIR@");
  const QString DREAM3DProjDir("@DREAM3DProj_SOURCE_DIR@");
  const QString TestTempDir("@TEST_TEMP_DIR@");
  const QString PluginSourceDir("@DREAM3DReview_SOURCE_DIR@");
  const QString PluginName("@PLUGIN_NAME@");
  
  namespace FFTHDFWriterFilterTest
  {
    const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  }
  
  namespace HEDMAnalysisFilterTest
  {
    const QString TestFile1("@TEST_TEMP_DIR@/TestFile1.txt");
    const QString TestFile2("@TEST_TEMP_DIR@/TestFile2.txt");
  } // namespace HEDMAnalysisFilterTest
  
  namespace AnisotropyTest
  {
    const QString InputDir("@Anisotropy_Data_DIR@");

    const QString TestInput("@Anisotropy_Data_DIR@/AlMgSc.h5ebsd");

    const QString TestOutput1("@TEST_TEMP_DIR@/AdaptiveAlignmentFeature.txt");
    const QString TestOutput2("@TEST_TEMP_DIR@/AdaptiveAlignmentMisorientation.txt");
    const QString TestOutput3("@TEST_TEMP_DIR@/AdaptiveAlignmentMutualInformation.txt");
    const QString TestOutput4("@TEST_TEMP_DIR@/SteinerCompact.vtk");
    const QString TestOutput5("@TEST_TEMP_DIR@/SteinerCompact.txt");
    
    const QString PipelineJsonFile("@TEST_TEMP_DIR@/TestPipeline.json");
    
    const QString TestTifPrefix("AlMgSc-TD_");
    const QString TestTifSuffix("");
    const QString TestTifExtension("tif");
    
    const int TestTifPaddingDigits = 3;
    const int TestTifStartIndex = 0;
    const int TestTifEndIndex = 9;
  } // namespace AnisotropyTest
} // namespace UnitTest

// clang-format on
